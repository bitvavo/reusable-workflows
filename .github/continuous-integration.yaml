name: Continuous Integration

on:
  workflow_call:
    secrets:
      READ_PACKAGE_TOKEN:
        required: true
      GITHUB_TOKEN:
        rewiured: true
jobs:
  compile-and-lint:
    name: Compile and Lint
    runs-on: ubuntu-latest

    if: |
      !contains(github.event.head_commit.message, '[skip tests]') &&
      !contains(github.event.head_commit.message, '[skip ci]')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16.10'

      - name: Cache local node_modules
        uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-modules
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm i
        env:
          GITHUB_TOKEN: ${{ secrets.READ_PACKAGE_TOKEN }}

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

  unit-tests:
    name: Unit tests
    needs: compile-and-lint
    runs-on: ubuntu-latest

    if: |
      !contains(github.event.head_commit.message, '[skip tests]') &&
      !contains(github.event.head_commit.message, '[skip ci]')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16.10'

      - name: Restore cached node_modules
        uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-modules
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm i
        env:
          GITHUB_TOKEN: ${{ secrets.READ_PACKAGE_TOKEN }}

      - name: Prepare env
        run: cp .env.example .env

      - name: Run unit tests and create coverage report
        uses: artiomtr/jest-coverage-report-action@v2.0-rc.5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          test-script: npm run test:coverage-silent
          skip-step: install